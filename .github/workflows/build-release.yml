name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            triplet: linux-x86_64
          - os: windows-2022
            triplet: windows-x86_64

    steps:
      - uses: actions/checkout@v4

      # --- Linux: GCC 13.2 ---
      - name: Install GCC 13.2 on Linux
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install -y gcc-13 g++-13 cmake pkg-config libx11-dev libgl1-mesa-dev zip
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-13 100
          gcc --version
          g++ --version

      # --- Windows: MinGW-w64 GCC 13.0.0 and pkg-config ---
      - name: Install MinGW-w64 GCC 13.0.0 and pkg-config on Windows
        if: matrix.os == 'windows-2022'
        run: |
          choco install mingw --version=13.0.0 --allow-downgrade --no-progress -y
          choco install pkgconfiglite -y --no-progress
          echo "C:/ProgramData/chocolatey/lib/mingw/tools/install/mingw64/bin" >> $GITHUB_PATH
          echo "C:/ProgramData/chocolatey/bin" >> $GITHUB_PATH
          gcc --version
          g++ --version
          pkg-config --version

      # --- Configure CMake on Linux ---
      - name: Configure CMake (Linux)
        if: matrix.os == 'ubuntu-22.04'
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=20

      # --- Configure CMake on Windows (MinGW) ---
      - name: Configure CMake (Windows MinGW)
        if: matrix.os == 'windows-2022'
        run: cmake -B build -S . -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=gcc -DCMAKE_CXX_COMPILER=g++ -DCMAKE_CXX_STANDARD=20

      # --- Build ---
      - name: Build
        run: cmake --build build --config Release --verbose --parallel

      # --- Package ---
      - name: Create ZIP of bin folder
        run: zip -r release-${{ matrix.triplet }}.zip bin/
        shell: bash

      - name: Upload ZIP artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.triplet }}-zip
          path: release-${{ matrix.triplet }}.zip

  release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: linux-x86_64-zip
          path: ./release
      - uses: actions/download-artifact@v4
        with:
          name: windows-x86_64-zip
          path: ./release
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            release/linux-x86_64.zip
            release/windows-x86_64.zip
