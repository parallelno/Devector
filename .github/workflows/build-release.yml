name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

env:
  BUILD_TYPE: Release

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper versioning

    - name: Setup MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          mingw-w64-ucrt-x86_64-gcc
          mingw-w64-ucrt-x86_64-cmake
          mingw-w64-ucrt-x86_64-make
          mingw-w64-ucrt-x86_64-ninja
          mingw-w64-ucrt-x86_64-pkg-config
          git

    - name: Configure CMake
      shell: msys2 {0}
      run: |
        mkdir -p build
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_C_COMPILER=gcc \
          -DCMAKE_CXX_COMPILER=g++ \
          -G "MinGW Makefiles"

    - name: Build project
      shell: msys2 {0}
      run: |
        cd build
        cmake --build . --config ${{ env.BUILD_TYPE }} --parallel $(nproc)

    - name: Create release package
      shell: msys2 {0}
      run: |
        # Create release directory
        mkdir -p release/devector

        # Copy the bin directory contents to release
        cp -r bin/* release/devector/

        # Copy additional files if they exist
        if [ -f README.md ]; then
          cp README.md release/devector/
        fi
        if [ -f LICENSE ]; then
          cp LICENSE release/devector/
        fi
        if [ -f CHANGELOG.md ]; then
          cp CHANGELOG.md release/devector/
        fi

        # Create ZIP archive
        cd release
        zip -r ../devector-windows-x64.zip devector/

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: devector-windows-x64
        path: devector-windows-x64.zip
        retention-days: 30

  release:
    needs: build-windows
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: devector-windows-x64
        path: ./

    - name: Extract tag name
      id: tag_name
      run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

    - name: Generate release notes
      id: release_notes
      run: |
        if [ -f CHANGELOG.md ]; then
          # Extract changelog section for this version if it exists
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "## Changes in ${{ steps.tag_name.outputs.TAG_NAME }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Built with:" >> $GITHUB_OUTPUT
          echo "- GCC 13.2.0 (MSYS2 UCRT64)" >> $GITHUB_OUTPUT
          echo "- C++20 standard" >> $GITHUB_OUTPUT
          echo "- Static linking for portability" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "### Package Contents" >> $GITHUB_OUTPUT
          echo "- devector.exe - Main executable" >> $GITHUB_OUTPUT
          echo "- SDL3.dll - Required SDL3 library" >> $GITHUB_OUTPUT
          echo "- Resource files and data" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
          echo "Release ${{ steps.tag_name.outputs.TAG_NAME }}" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo "Built with GCC 13.2.0 (MSYS2 UCRT64) using C++20 standard." >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag_name.outputs.TAG_NAME }}
        name: Release ${{ steps.tag_name.outputs.TAG_NAME }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        files: |
          devector-windows-x64.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}