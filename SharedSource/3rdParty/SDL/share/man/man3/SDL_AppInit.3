.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_AppInit:
.\"   https://wiki.libsdl.org/SDL_AppInit
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_AppInit
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_AppInit 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_AppInit \- App-implemented initial entry point for 
.BR SDL_MAIN_USE_CALLBACKS
 apps\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_main\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_AppInit(void **appstate, int argc, char *argv[]);
.fi
.SH DESCRIPTION
Apps implement this function when using

.BR SDL_MAIN_USE_CALLBACKS
\[char46] If using a standard
"main" function, you should not supply this\[char46]

This function is called by SDL once, at startup\[char46] The function should
initialize whatever is necessary, possibly create windows and open audio
devices, etc\[char46] The
.BR argc
and
.BR argv
parameters work like they would with a
standard "main" function\[char46]

This function should not go into an infinite mainloop; it should do any
one-time setup it requires and then return\[char46]

The app may optionally assign a pointer to
.BR *appstate
\[char46] This pointer will
be provided on every future call to the other entry points, to allow
application state to be preserved between functions without the app needing
to use a global variable\[char46] If this isn't set, the pointer will be NULL in
future entry points\[char46]

If this function returns 0, the app will proceed to normal operation, and
will begin receiving repeated calls to 
.BR SDL_AppIterate
 and

.BR SDL_AppEvent
 for the life of the program\[char46] If this function
returns < 0, SDL will call 
.BR SDL_AppQuit
 and terminate the
process with an exit code that reports an error to the platform\[char46] If it
returns > 0, the SDL calls 
.BR SDL_AppQuit
 and terminates with
an exit code that reports success to the platform\[char46]

.SH FUNCTION PARAMETERS
.TP
.I appstate
a place where the app can optionally store a pointer for future use\[char46]
.TP
.I argc
The standard ANSI C main's argc; number of elements in
.BR argv

.TP
.I argv
The standard ANSI C main's argv; array of command line arguments\[char46]
.SH RETURN VALUE
Returns -1 to terminate with an error, 1 to terminate with success, 0 to
continue\[char46]

.SH THREAD SAFETY
This function is not thread safe\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_AppIterate (3),
.BR SDL_AppEvent (3),
.BR SDL_AppQuit (3)
