.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_DetachThread:
.\"   https://wiki.libsdl.org/SDL_DetachThread
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_DetachThread
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_DetachThread 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_DetachThread \- Let a thread clean up on exit without intervention\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_thread\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "void SDL_DetachThread(SDL_Thread * thread);
.fi
.SH DESCRIPTION
A thread may be "detached" to signify that it should not remain until
another thread has called 
.BR SDL_WaitThread
() on it\[char46]
Detaching a thread is useful for long-running threads that nothing needs to
synchronize with or further manage\[char46] When a detached thread is done, it
simply goes away\[char46]

There is no way to recover the return code of a detached thread\[char46] If you
need this, don't detach the thread and instead use

.BR SDL_WaitThread
()\[char46]

Once a thread is detached, you should usually assume the

.BR SDL_Thread
 isn't safe to reference again, as it will become
invalid immediately upon the detached thread's exit, instead of remaining
until someone has called 
.BR SDL_WaitThread
() to finally
clean it up\[char46] As such, don't detach the same thread more than once\[char46]

If a thread has already exited when passed to

.BR SDL_DetachThread
(), it will stop waiting for a call to

.BR SDL_WaitThread
() and clean up immediately\[char46] It is not safe
to detach a thread that might be used with

.BR SDL_WaitThread
()\[char46]

You may not call 
.BR SDL_WaitThread
() on a thread that has
been detached\[char46] Use either that function or this one, but not both, or
behavior is undefined\[char46]

It is safe to pass NULL to this function; it is a no-op\[char46]

.SH FUNCTION PARAMETERS
.TP
.I thread
the 
.BR SDL_Thread
 pointer that was returned from the 
.BR SDL_CreateThread
() call that started this thread
.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_CreateThread (3),
.BR SDL_WaitThread (3)
