.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_CompilerBarrier:
.\"   https://wiki.libsdl.org/SDL_CompilerBarrier
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_CompilerBarrier
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_CompilerBarrier 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_CompilerBarrier \- Mark a compiler barrier\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_atomic\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "#define SDL_CompilerBarrier() DoCompilerSpecificReadWriteBarrier()
.fi
.SH DESCRIPTION
A compiler barrier prevents the compiler from reordering reads and writes
to globally visible variables across the call\[char46]

This macro only prevents the compiler from reordering reads and writes, it
does not prevent the CPU from reordering reads and writes\[char46] However, all of
the atomic operations that modify memory are full memory barriers\[char46]

.SH THREAD SAFETY
Obviously this macro is safe to use from any thread at any time, but if you
find yourself needing this, you are probably dealing with some very
sensitive code; be careful!

.SH AVAILABILITY
This macro is available since SDL 3\[char46]0\[char46]0\[char46]

