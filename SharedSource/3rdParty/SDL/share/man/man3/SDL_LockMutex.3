.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_LockMutex:
.\"   https://wiki.libsdl.org/SDL_LockMutex
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_LockMutex
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_LockMutex 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_LockMutex \- Lock the mutex\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_mutex\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "void SDL_LockMutex(SDL_Mutex *mutex) SDL_ACQUIRE(mutex);
.fi
.SH DESCRIPTION
This will block until the mutex is available, which is to say it is in the
unlocked state and the OS has chosen the caller as the next thread to lock
it\[char46] Of all threads waiting to lock the mutex, only one may do so at a time\[char46]

It is legal for the owning thread to lock an already-locked mutex\[char46] It must
unlock it the same number of times before it is actually made available for
other threads in the system (this is known as a "recursive mutex")\[char46]

This function does not fail; if mutex is NULL, it will return immediately
having locked nothing\[char46] If the mutex is valid, this function will always
block until it can lock the mutex, and return with it locked\[char46]

.SH FUNCTION PARAMETERS
.TP
.I mutex
the mutex to lock
.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_TryLockMutex (3),
.BR SDL_UnlockMutex (3)
