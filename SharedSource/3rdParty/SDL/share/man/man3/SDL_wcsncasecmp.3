.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_wcsncasecmp:
.\"   https://wiki.libsdl.org/SDL_wcsncasecmp
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_wcsncasecmp
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_wcsncasecmp 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_wcsncasecmp \- Compare two wide strings, case-insensitively, up to a number of wchar_t\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_stdinc\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_wcsncasecmp(const wchar_t *str1, const wchar_t *str2, size_t maxlen);
.fi
.SH DESCRIPTION
This will work with Unicode strings, using a technique called
"case-folding" to handle the vast majority of case-sensitive human
languages regardless of system locale\[char46] It can deal with expanding values: a
German Eszett character can compare against two ASCII 's' chars and be
considered a match, for example\[char46] A notable exception: it does not handle
the Turkish 'i' character; human language is complicated!

Depending on your platform, "wchar_t" might be 2 bytes, and expected to be
UTF-16 encoded (like Windows), or 4 bytes in UTF-32 format\[char46] Since this
handles Unicode, it expects the string to be well-formed and not a
null-terminated string of arbitrary bytes\[char46] Characters that are not valid
UTF-16 (or UTF-32) are treated as Unicode character U+FFFD (REPLACEMENT
CHARACTER), which is to say two strings of random bits may turn out to
match if they convert to the same amount of replacement characters\[char46]

Note that while this function might deal with variable-sized characters,
.BR maxlen
specifies a _wchar_ limit! If the limit lands in the middle of a
multi-byte UTF-16 sequence, it may convert a portion of the final character
to one or more Unicode character U+FFFD (REPLACEMENT CHARACTER) so as not
to overflow a buffer\[char46]
.BR maxlen
specifies a maximum number of wchar_t values to compare; if the
strings match to this number of wchar_t (or both have matched to a
null-terminator character before this number of bytes), they will be
considered equal\[char46]

.SH FUNCTION PARAMETERS
.TP
.I str1
The first string to compare\[char46] NULL is not permitted!
.TP
.I str2
The second string to compare\[char46] NULL is not permitted!
.TP
.I maxlen
The maximum number of wchar_t values to compare\[char46]
.SH RETURN VALUE
Returns less than zero if str1 is "less than" str2, greater than zero if
str1 is "greater than" str2, and zero if the strings match exactly\[char46]

.SH THREAD SAFETY
It is safe to call this function from any thread\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

