.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_ReportAssertion:
.\"   https://wiki.libsdl.org/SDL_ReportAssertion
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_ReportAssertion
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_ReportAssertion 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_ReportAssertion \- Never call this directly\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_assert\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "SDL_AssertState SDL_ReportAssertion(SDL_AssertData *data,
.BI "                                    const char *func,
.BI "                                    const char *file, int line)
.BI "#ifdef __clang__
.BI "#if __has_feature(attribute_analyzer_noreturn)
.BI "   __attribute__((analyzer_noreturn))
.BI "#endif
.BI "#endif
.BI ";
.BI "/* Previous 'analyzer_noreturn' attribute tells Clang's static analysis that we're a custom assert function,
.BI "   and that the analyzer should assume the condition was always true past this
.BI "   SDL_assert test. */
.BI "
.BI "
.BI "/* Define the trigger breakpoint call used in asserts */
.BI "#ifndef SDL_AssertBreakpoint
.BI "#if defined(ANDROID) && defined(assert)
.BI "/* Define this as empty in case assert() is defined as SDL_assert */
.BI "#define SDL_AssertBreakpoint()
.BI "#else
.BI "#define SDL_AssertBreakpoint() SDL_TriggerBreakpoint()
.BI "#endif
.BI "#endif /* !SDL_AssertBreakpoint */
.BI "
.BI "/* the do {} while(0) avoids dangling else problems:
.BI "    if (x) SDL_assert(y); else blah();
.fi
.SH DESCRIPTION
Use the 
.BR SDL_assert
* macros instead\[char46]

.SH FUNCTION PARAMETERS
.TP
.I data
assert data structure
.TP
.I func
function name
.TP
.I file
file name
.TP
.I line
line number
.SH RETURN VALUE
Returns assert state

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

