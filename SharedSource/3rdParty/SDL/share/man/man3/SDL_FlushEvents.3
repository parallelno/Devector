.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_FlushEvents:
.\"   https://wiki.libsdl.org/SDL_FlushEvents
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_FlushEvents
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_FlushEvents 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_FlushEvents \- Clear events of a range of types from the event queue\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_events\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "void SDL_FlushEvents(Uint32 minType, Uint32 maxType);
.fi
.SH DESCRIPTION
This will unconditionally remove any events from the queue that are in the
range of
.BR minType
to
.BR maxType
, inclusive\[char46] If you need to remove a single
event type, use 
.BR SDL_FlushEvent
() instead\[char46]

It's also normal to just ignore events you don't care about in your event
loop without calling this function\[char46]

This function only affects currently queued events\[char46] If you want to make
sure that all pending OS events are flushed, you can call

.BR SDL_PumpEvents
() on the main thread immediately before
the flush call\[char46]

.SH FUNCTION PARAMETERS
.TP
.I minType
the low end of event type to be cleared, inclusive; see 
.BR SDL_EventType
 for details
.TP
.I maxType
the high end of event type to be cleared, inclusive; see 
.BR SDL_EventType
 for details
.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_FlushEvent (3)
