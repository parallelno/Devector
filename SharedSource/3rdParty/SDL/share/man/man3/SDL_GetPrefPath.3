.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GetPrefPath:
.\"   https://wiki.libsdl.org/SDL_GetPrefPath
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GetPrefPath
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GetPrefPath 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_GetPrefPath \- Get the user-and-app-specific path where files can be written\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_filesystem\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "char* SDL_GetPrefPath(const char *org, const char *app);
.fi
.SH DESCRIPTION
Get the "pref dir"\[char46] This is meant to be where users can write personal
files (preferences and save games, etc) that are specific to your
application\[char46] This directory is unique per user, per application\[char46]

This function will decide the appropriate location in the native
filesystem, create the directory if necessary, and return a string of the
absolute path to the directory in UTF-8 encoding\[char46]

On Windows, the string might look like:
.BR C:\\Users\\bob\\AppData\\Roaming\\My Company\\My Program Name\\
On Linux, the string might look like:
.BR /home/bob/\[char46]local/share/My Program Name/
On macOS, the string might look like:
.BR /Users/bob/Library/Application Support/My Program Name/
You should assume the path returned by this function is the only safe place
to write files (and that 
.BR SDL_GetBasePath
(), while it
might be writable, or even the parent of the returned path, isn't where you
should be writing things)\[char46]

Both the org and app strings may become part of a directory name, so please
follow these rules:


\(bu Try to use the same org string (_including case-sensitivity_) for all
  your applications that use this function\[char46]

\(bu Always use a unique app string for each one, and make sure it never
  changes for an app once you've decided on it\[char46]

\(bu Unicode characters are legal, as long as it's UTF-8 encoded, but\[char46]\[char46]\[char46]

\(bu \[char46]\[char46]\[char46]only use letters, numbers, and spaces\[char46] Avoid punctuation like "Game
  Name 2: Bad Guy's Revenge!" \[char46]\[char46]\[char46] "Game Name 2" is sufficient\[char46]

The returned path is guaranteed to end with a path separator ('\\' on
Windows, '/' on most other platforms)\[char46]

The pointer returned is owned by the caller\[char46] Please call

.BR SDL_free
() on the pointer when done with it\[char46]

.SH FUNCTION PARAMETERS
.TP
.I org
the name of your organization
.TP
.I app
the name of your application
.SH RETURN VALUE
Returns a UTF-8 string of the user directory in platform-dependent
notation\[char46] NULL if there's a problem (creating directory failed, etc\[char46])\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_GetBasePath (3)
