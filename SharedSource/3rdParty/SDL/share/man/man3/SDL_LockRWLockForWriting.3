.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_LockRWLockForWriting:
.\"   https://wiki.libsdl.org/SDL_LockRWLockForWriting
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_LockRWLockForWriting
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_LockRWLockForWriting 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_LockRWLockForWriting \- Lock the read/write lock for _write_ operations\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_mutex\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "void SDL_LockRWLockForWriting(SDL_RWLock *rwlock) SDL_ACQUIRE(rwlock);
.fi
.SH DESCRIPTION
This will block until the rwlock is available, which is to say it is not
locked for reading or writing by any other thread\[char46] Only one thread may hold
the lock when it requests write access; all other threads, whether they
also want to write or only want read-only access, must wait until the
writer thread has released the lock\[char46]

It is illegal for the owning thread to lock an already-locked rwlock for
writing (read-only may be locked recursively, writing can not)\[char46] Doing so
results in undefined behavior\[char46]

It is illegal to request a write lock from a thread that already holds a
read-only lock\[char46] Doing so results in undefined behavior\[char46] Unlock the
read-only lock before requesting a write lock\[char46]

This function does not fail; if rwlock is NULL, it will return immediately
having locked nothing\[char46] If the rwlock is valid, this function will always
block until it can lock the mutex, and return with it locked\[char46]

.SH FUNCTION PARAMETERS
.TP
.I rwlock
the read/write lock to lock
.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_LockRWLockForReading (3),
.BR SDL_TryLockRWLockForWriting (3),
.BR SDL_UnlockRWLock (3)
