.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_OpenCameraDevice:
.\"   https://wiki.libsdl.org/SDL_OpenCameraDevice
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_OpenCameraDevice
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_OpenCameraDevice 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_OpenCameraDevice \- Open a video capture device (a "camera")\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_camera\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "SDL_Camera* SDL_OpenCameraDevice(SDL_CameraDeviceID instance_id, const SDL_CameraSpec *spec);
.fi
.SH DESCRIPTION
You can open the device with any reasonable spec, and if the hardware can't
directly support it, it will convert data seamlessly to the requested
format\[char46] This might incur overhead, including scaling of image data\[char46]

If you would rather accept whatever format the device offers, you can pass
a NULL spec here and it will choose one for you (and you can use

.BR SDL_Surface
's conversion/scaling functions directly if
necessary)\[char46]

You can call 
.BR SDL_GetCameraFormat
() to get the actual
data format if passing a NULL spec here\[char46] You can see the exact specs a
device can support without conversion with

.BR SDL_GetCameraSupportedSpecs
()\[char46]

SDL will not attempt to emulate framerate; it will try to set the hardware
to the rate closest to the requested speed, but it won't attempt to limit
or duplicate frames artificially; call

.BR SDL_GetCameraFormat
() to see the actual framerate of
the opened the device, and check your timestamps if this is crucial to your
app!

Note that the camera is not usable until the user approves its use! On some
platforms, the operating system will prompt the user to permit access to
the camera, and they can choose Yes or No at that point\[char46] Until they do, the
camera will not be usable\[char46] The app should either wait for an

.BR SDL_EVENT_CAMERA_DEVICE_APPROVED
 (or

.BR SDL_EVENT_CAMERA_DEVICE_DENIED
) event, or
poll 
.BR SDL_IsCameraApproved
() occasionally until it
returns non-zero\[char46] On platforms that don't require explicit user approval
(and perhaps in places where the user previously permitted access), the
approval event might come immediately, but it might come seconds, minutes,
or hours later!

.SH FUNCTION PARAMETERS
.TP
.I instance_id
the camera device instance ID
.TP
.I spec
The desired format for data the device will provide\[char46] Can be NULL\[char46]
.SH RETURN VALUE
Returns device, or NULL on failure; call 
.BR SDL_GetError
() for
more information\[char46]

.SH THREAD SAFETY
It is safe to call this function from any thread\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_GetCameraDevices (3),
.BR SDL_GetCameraFormat (3)
