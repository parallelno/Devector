.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_HapticEffect:
.\"   https://wiki.libsdl.org/SDL_HapticEffect
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_HapticEffect
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_HapticEffect 3type "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 DATATYPES"
.SH NAME
SDL_HapticEffect \- The generic template for any haptic effect\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_haptic\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "typedef union SDL_HapticEffect
.BI "{
.BI "    /* Common for all force feedback effects */
.BI "    Uint16 type;                    /**< Effect type. */
.BI "    SDL_HapticConstant constant;    /**< Constant effect. */
.BI "    SDL_HapticPeriodic periodic;    /**< Periodic effect. */
.BI "    SDL_HapticCondition condition;  /**< Condition effect. */
.BI "    SDL_HapticRamp ramp;            /**< Ramp effect. */
.BI "    SDL_HapticLeftRight leftright;  /**< Left/Right effect. */
.BI "    SDL_HapticCustom custom;        /**< Custom effect. */
.BI "} SDL_HapticEffect;
.fi
.SH DESCRIPTION
All values max at 32767 (0x7FFF)\[char46] Signed values also can be negative\[char46] Time
values unless specified otherwise are in milliseconds\[char46]

You can also pass 
.BR SDL_HAPTIC_INFINITY
 to length
instead of a 0-32767 value\[char46] Neither delay, interval, attack_length nor
fade_length support 
.BR SDL_HAPTIC_INFINITY
\[char46] Fade will
also not be used since effect never ends\[char46]

Additionally, the 
.BR SDL_HAPTIC_RAMP
 effect does not
support a duration of 
.BR SDL_HAPTIC_INFINITY
\[char46]

Button triggers may not be supported on all devices, it is advised to not
use them if possible\[char46] Buttons start at index 1 instead of index 0 like the
joystick\[char46]

If both attack_length and fade_level are 0, the envelope is not used,
otherwise both values are used\[char46]

Common parts:
.BR 

.BR c
 // Replay - All effects have this
 Uint32 length;        // Duration of effect (ms)\[char46]
 Uint16 delay;         // Delay before starting effect\[char46]

 // Trigger - All effects have this
 Uint16 button;        // Button that triggers effect\[char46]
 Uint16 interval;      // How soon before effect can be triggered again\[char46]

 // Envelope - All effects except condition effects have this
 Uint16 attack_length; // Duration of the attack (ms)\[char46]
 Uint16 attack_level;  // Level at the start of the attack\[char46]
 Uint16 fade_length;   // Duration of the fade out (ms)\[char46]
 Uint16 fade_level;    // Level at the end of the fade\[char46]


.BR 
Here we have an example of a constant effect evolution in time:
.BR 

.BR 
 Strength
 ^
 |
 |    effect level -->  _________________
 |                     /                 \
 |                    /                   \
 |                   /                     \
 |                  /                       \
 | attack_level --> |                        \
 |                  |                        |  <---  fade_level
 |
 +--------------------------------------------------> Time
                    [--]                 [---]
                    attack_length        fade_length

 [------------------][-----------------------]
 delay               length


.BR 
Note either the attack_level or the fade_level may be above the actual
effect level\[char46]

.SH AVAILABILITY
This struct is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_HapticConstant (3type),
.BR SDL_HapticPeriodic (3type),
.BR SDL_HapticCondition (3type),
.BR SDL_HapticRamp (3type),
.BR SDL_HapticLeftRight (3type),
.BR SDL_HapticCustom (3type)
