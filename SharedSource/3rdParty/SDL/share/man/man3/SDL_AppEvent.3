.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_AppEvent:
.\"   https://wiki.libsdl.org/SDL_AppEvent
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_AppEvent
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_AppEvent 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_AppEvent \- App-implemented event entry point for 
.BR SDL_MAIN_USE_CALLBACKS
 apps\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_main\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "int SDL_AppEvent(void *appstate, const SDL_Event *event);
.fi
.SH DESCRIPTION
Apps implement this function when using

.BR SDL_MAIN_USE_CALLBACKS
\[char46] If using a standard
"main" function, you should not supply this\[char46]

This function is called as needed by SDL after 
.BR SDL_AppInit

returns 0; It is called once for each new event\[char46]

There is (currently) no guarantee about what thread this will be called
from; whatever thread pushes an event onto SDL's queue will trigger this
function\[char46] SDL is responsible for pumping the event queue between each call
to 
.BR SDL_AppIterate
, so in normal operation one should only
get events in a serial fashion, but be careful if you have a thread that
explicitly calls 
.BR SDL_PushEvent
\[char46]

Events sent to this function are not owned by the app; if you need to save
the data, you should copy it\[char46]

You do not need to free event data (such as the
.BR file
string in

.BR SDL_EVENT_DROP_FILE
), as SDL will free it once this
function returns\[char46] Note that this is different than one might expect when
using a standard "main" function!

This function should not go into an infinite mainloop; it should handle the
provided event appropriately and return\[char46]

The
.BR appstate
parameter is an optional pointer provided by the app during

.BR SDL_AppInit
()\[char46] If the app never provided a pointer, this
will be NULL\[char46]

If this function returns 0, the app will continue normal operation,
receiving repeated calls to 
.BR SDL_AppIterate
 and

.BR SDL_AppEvent
 for the life of the program\[char46] If this function
returns < 0, SDL will call 
.BR SDL_AppQuit
 and terminate the
process with an exit code that reports an error to the platform\[char46] If it
returns > 0, the SDL calls 
.BR SDL_AppQuit
 and terminates with
an exit code that reports success to the platform\[char46]

.SH FUNCTION PARAMETERS
.TP
.I appstate
an optional pointer, provided by the app in 
.BR SDL_AppInit
\[char46]
.TP
.I event
the new event for the app to examine\[char46]
.SH RETURN VALUE
Returns -1 to terminate with an error, 1 to terminate with success, 0 to
continue\[char46]

.SH THREAD SAFETY
This function is not thread safe\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_AppInit (3),
.BR SDL_AppIterate (3)
