.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_RWLock:
.\"   https://wiki.libsdl.org/SDL_RWLock
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_RWLock
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_RWLock 3type "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 DATATYPES"
.SH NAME
SDL_RWLock \- A mutex that allows read-only threads to run in parallel\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_mutex\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "typedef struct SDL_RWLock SDL_RWLock;
.fi
.SH DESCRIPTION
A rwlock is roughly the same concept as 
.BR SDL_Mutex
, but allows
threads that request read-only access to all hold the lock at the same
time\[char46] If a thread requests write access, it will block until all read-only
threads have released the lock, and no one else can hold the thread (for
reading or writing) at the same time as the writing thread\[char46]

This can be more efficient in cases where several threads need to access
data frequently, but changes to that data are rare\[char46]

There are other rules that apply to rwlocks that don't apply to mutexes,
about how threads are scheduled and when they can be recursively locked\[char46]
These are documented in the other rwlock functions\[char46]

.SH AVAILABILITY
This struct is available since SDL 3\[char46]0\[char46]0\[char46]

