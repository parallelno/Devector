.\" This manpage content is licensed under Creative Commons
.\"  Attribution 4.0 International (CC BY 4.0)
.\"   https://creativecommons.org/licenses/by/4.0/
.\" This manpage was generated from SDL's wiki page for SDL_GetAssertionReport:
.\"   https://wiki.libsdl.org/SDL_GetAssertionReport
.\" Generated with SDL/build-scripts/wikiheaders.pl
.\"  revision SDL-3.1.2-no-vcs
.\" Please report issues in this manpage's content at:
.\"   https://github.com/libsdl-org/sdlwiki/issues/new
.\" Please report issues in the generation of this manpage from the wiki at:
.\"   https://github.com/libsdl-org/SDL/issues/new?title=Misgenerated%20manpage%20for%20SDL_GetAssertionReport
.\" SDL can be found at https://libsdl.org/
.de URL
\$2 \(laURL: \$1 \(ra\$3
..
.if \n[.g] .mso www.tmac
.TH SDL_GetAssertionReport 3 "SDL 3.1.2" "Simple Directmedia Layer" "SDL3 FUNCTIONS"
.SH NAME
SDL_GetAssertionReport \- Get a list of all assertion failures\[char46]
.SH HEADER FILE
Defined in SDL3/SDL_assert\[char46]h

.SH SYNOPSIS
.nf
.B #include \(dqSDL3/SDL.h\(dq
.PP
.BI "const SDL_AssertData * SDL_GetAssertionReport(void);
.fi
.SH DESCRIPTION
This function gets all assertions triggered since the last call to

.BR SDL_ResetAssertionReport
(), or the start of the
program\[char46]

The proper way to examine this data looks something like this:
.BR 

.BR c
const SDL_AssertData *item = SDL_GetAssertionReport();
while (item) {
   printf("'%s', %s (%s:%d), triggered %u times, always ignore: %s\[char46]\\n",
          item->condition, item->function, item->filename,
          item->linenum, item->trigger_count,
          item->always_ignore ? "yes" : "no");
   item = item->next;
}


.BR 

.SH RETURN VALUE
Returns a list of all failed assertions or NULL if the list is empty\[char46] This
memory should not be modified or freed by the application\[char46]

.SH AVAILABILITY
This function is available since SDL 3\[char46]0\[char46]0\[char46]

.SH SEE ALSO
.BR SDL_ResetAssertionReport (3)
